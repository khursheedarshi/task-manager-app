{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'https://localhost:5001/api/tasks';\nexport const getTasks = () => axios.get(API_BASE_URL);\nexport const addTask = task => axios.post(API_BASE_URL, task);\nexport const updateTask = (id, task) => axios.put(`${API_BASE_URL}/${id}`, task);\n\n//axios.interceptors.response.use(undefined, error=> {\n// const {status, data, config}= error.response;\n// if (status===404)\n// {history.push('/not found');}\n// if (status===400 && config.method === 'get' && data.errors.hasOwnProperty('id'))\n// {history.push('/not found');}\n// if (status===500)\n// {toast.error('Server error-ref terminal for more info!');}\n//})\n\naxios.interceptors.response.use(function (response) {\n  // Optional: Do something with response data\n  return response;\n}, function (error) {\n  // Do whatever you want with the response error here:\n\n  // But, be SURE to return the rejected promise, so the caller still has \n  // the option of additional specialized handling at the call-site:\n  return Promise.reject(error);\n});","map":{"version":3,"names":["axios","API_BASE_URL","getTasks","get","addTask","task","post","updateTask","id","put","interceptors","response","use","error","Promise","reject"],"sources":["/Users/Mansoor/task-manager-app/src/services/taskService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'https://localhost:5001/api/tasks';\n\nexport const getTasks = () => axios.get(API_BASE_URL);\nexport const addTask = (task) => axios.post(API_BASE_URL, task);\nexport const updateTask = (id, task) => axios.put(`${API_BASE_URL}/${id}`, task);\n\n//axios.interceptors.response.use(undefined, error=> {\n   // const {status, data, config}= error.response;\n   // if (status===404)\n   // {history.push('/not found');}\n   // if (status===400 && config.method === 'get' && data.errors.hasOwnProperty('id'))\n   // {history.push('/not found');}\n   // if (status===500)\n   // {toast.error('Server error-ref terminal for more info!');}\n//})\n\naxios.interceptors.response.use(function (response) {\n    // Optional: Do something with response data\n    return response;\n  }, function (error) {\n    // Do whatever you want with the response error here:\n\n    // But, be SURE to return the rejected promise, so the caller still has \n    // the option of additional specialized handling at the call-site:\n    return Promise.reject(error);\n  });"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,kCAAkC;AAEvD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAMF,KAAK,CAACG,GAAG,CAACF,YAAY,CAAC;AACrD,OAAO,MAAMG,OAAO,GAAIC,IAAI,IAAKL,KAAK,CAACM,IAAI,CAACL,YAAY,EAAEI,IAAI,CAAC;AAC/D,OAAO,MAAME,UAAU,GAAGA,CAACC,EAAE,EAAEH,IAAI,KAAKL,KAAK,CAACS,GAAG,CAAE,GAAER,YAAa,IAAGO,EAAG,EAAC,EAAEH,IAAI,CAAC;;AAEhF;AACG;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEAL,KAAK,CAACU,YAAY,CAACC,QAAQ,CAACC,GAAG,CAAC,UAAUD,QAAQ,EAAE;EAChD;EACA,OAAOA,QAAQ;AACjB,CAAC,EAAE,UAAUE,KAAK,EAAE;EAClB;;EAEA;EACA;EACA,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}