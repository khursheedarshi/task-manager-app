{"ast":null,"code":"var _jsxFileName = \"/Users/Mansoor/task-manager-app/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Task from './Task';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const response = await getTasks();\n      setTasks(response.data);\n    };\n    fetchTasks();\n  }, []);\n  const handleAddTask = async () => {\n    const newTask = {\n      title: newTaskTitle,\n      dueDate: new Date().toISOString(),\n      isCompleted: false\n    };\n    await addTask(newTask);\n    setNewTaskTitle('');\n    const updatedTasks = await getTasks();\n    setTasks(updatedTasks.data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter task title\",\n      value: newTaskTitle,\n      onChange: e => setNewTaskTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      onUpdate: () => updateTask(task.id, task)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"JCbPMeVttXnDmQPUo6I6n9O3ejA=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","Task","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","newTaskTitle","setNewTaskTitle","fetchTasks","response","getTasks","data","handleAddTask","newTask","title","dueDate","Date","toISOString","isCompleted","addTask","updatedTasks","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","task","onUpdate","updateTask","id","_c","$RefreshReg$"],"sources":["/Users/Mansoor/task-manager-app/src/components/TaskList.js"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport Task from './Task';\n\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const response = await getTasks();\n      setTasks(response.data);\n    };\n\n    fetchTasks();\n  }, []);\n\n  const handleAddTask = async () => {\n    const newTask = {\n      title: newTaskTitle,\n      dueDate: new Date().toISOString(),\n      isCompleted: false,\n    };\n\n    await addTask(newTask);\n    setNewTaskTitle('');\n    const updatedTasks = await getTasks();\n    setTasks(updatedTasks.data);\n  };\n\n  return (\n    <div>\n      <h1>Task List</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter task title\"\n        value={newTaskTitle}\n        onChange={(e) => setNewTaskTitle(e.target.value)}\n      />\n      <button onClick={handleAddTask}>Add Task</button>\n      {tasks.map((task) => (\n        <Task key={task.id} task={task} onUpdate={() => updateTask(task.id, task)} />\n      ))}\n    </div>\n  );\n};\n\nexport default TaskList;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMW,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,QAAQ,CAAC,CAAC;MACjCL,QAAQ,CAACI,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC;IAEDH,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,OAAO,GAAG;MACdC,KAAK,EAAER,YAAY;MACnBS,OAAO,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACjCC,WAAW,EAAE;IACf,CAAC;IAED,MAAMC,OAAO,CAACN,OAAO,CAAC;IACtBN,eAAe,CAAC,EAAE,CAAC;IACnB,MAAMa,YAAY,GAAG,MAAMV,QAAQ,CAAC,CAAC;IACrCL,QAAQ,CAACe,YAAY,CAACT,IAAI,CAAC;EAC7B,CAAC;EAED,oBACEV,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBxB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAEtB,YAAa;MACpBuB,QAAQ,EAAGC,CAAC,IAAKvB,eAAe,CAACuB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACFxB,OAAA;MAAQ+B,OAAO,EAAEpB,aAAc;MAAAS,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChDrB,KAAK,CAAC6B,GAAG,CAAEC,IAAI,iBACdjC,OAAA,CAACF,IAAI;MAAemC,IAAI,EAAEA,IAAK;MAACC,QAAQ,EAAEA,CAAA,KAAMC,UAAU,CAACF,IAAI,CAACG,EAAE,EAAEH,IAAI;IAAE,GAA/DA,IAAI,CAACG,EAAE;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0D,CAC7E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACtB,EAAA,CAzCID,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}