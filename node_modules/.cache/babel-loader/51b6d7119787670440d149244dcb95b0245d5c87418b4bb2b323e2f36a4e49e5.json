{"ast":null,"code":"var _jsxFileName = \"/Users/Mansoor/task-manager-app/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport task from './task';\nimport { getTasks, addTask, updateTask } from '../services/taskService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const response = await getTasks();\n      setTasks(response.data);\n    };\n    fetchTasks();\n  }, []);\n  const handleAddTask = async () => {\n    const newTask = {\n      title: newTaskTitle,\n      dueDate: new Date().toISOString(),\n      isCompleted: false\n    };\n    await addTask(newTask);\n    setNewTaskTitle('');\n    const updatedTasks = await getTasks();\n    setTasks(updatedTasks.data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Enter task title\",\n      value: newTaskTitle,\n      onChange: e => setNewTaskTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAddTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n      task: task,\n      onUpdate: () => updateTask(task.id, task)\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"JCbPMeVttXnDmQPUo6I6n9O3ejA=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","task","getTasks","addTask","updateTask","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","newTaskTitle","setNewTaskTitle","fetchTasks","response","data","handleAddTask","newTask","title","dueDate","Date","toISOString","isCompleted","updatedTasks","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","Task","onUpdate","id","_c","$RefreshReg$"],"sources":["/Users/Mansoor/task-manager-app/src/components/TaskList.js"],"sourcesContent":["\nimport React, { useEffect, useState } from 'react';\nimport task from './task';\nimport { getTasks, addTask, updateTask } from '../services/taskService';\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([]);\n  const [newTaskTitle, setNewTaskTitle] = useState('');\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const response = await getTasks();\n      setTasks(response.data);\n    };\n\n    fetchTasks();\n  }, []);\n\n  const handleAddTask = async () => {\n    const newTask = {\n      title: newTaskTitle,\n      dueDate: new Date().toISOString(),\n      isCompleted: false,\n    };\n\n    await addTask(newTask);\n    setNewTaskTitle('');\n    const updatedTasks = await getTasks();\n    setTasks(updatedTasks.data);\n  };\n\n  return (\n    <div>\n      <h1>Task List</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Enter task title\"\n        value={newTaskTitle}\n        onChange={(e) => setNewTaskTitle(e.target.value)}\n      />\n      <button onClick={handleAddTask}>Add Task</button>\n      {tasks.map((task) => (\n        <Task key={task.id} task={task} onUpdate={() => updateTask(task.id, task)} />\n      ))}\n    </div>\n  );\n};\n\nexport default TaskList;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,QAAQ,EAAEC,OAAO,EAAEC,UAAU,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEpDD,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMZ,QAAQ,CAAC,CAAC;MACjCQ,QAAQ,CAACI,QAAQ,CAACC,IAAI,CAAC;IACzB,CAAC;IAEDF,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,OAAO,GAAG;MACdC,KAAK,EAAEP,YAAY;MACnBQ,OAAO,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MACjCC,WAAW,EAAE;IACf,CAAC;IAED,MAAMnB,OAAO,CAACc,OAAO,CAAC;IACtBL,eAAe,CAAC,EAAE,CAAC;IACnB,MAAMW,YAAY,GAAG,MAAMrB,QAAQ,CAAC,CAAC;IACrCQ,QAAQ,CAACa,YAAY,CAACR,IAAI,CAAC;EAC7B,CAAC;EAED,oBACET,OAAA;IAAAkB,QAAA,gBACElB,OAAA;MAAAkB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBtB,OAAA;MACEuB,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,kBAAkB;MAC9BC,KAAK,EAAEpB,YAAa;MACpBqB,QAAQ,EAAGC,CAAC,IAAKrB,eAAe,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eACFtB,OAAA;MAAQ6B,OAAO,EAAEnB,aAAc;MAAAQ,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAChDnB,KAAK,CAAC2B,GAAG,CAAEnC,IAAI,iBACdK,OAAA,CAAC+B,IAAI;MAAepC,IAAI,EAAEA,IAAK;MAACqC,QAAQ,EAAEA,CAAA,KAAMlC,UAAU,CAACH,IAAI,CAACsC,EAAE,EAAEtC,IAAI;IAAE,GAA/DA,IAAI,CAACsC,EAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA0D,CAC7E,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACpB,EAAA,CAzCID,QAAQ;AAAAiC,EAAA,GAARjC,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}