{"ast":null,"code":"var _jsxFileName = \"/Users/Mansoor/task-manager-app/src/components/TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get('https://localhost:5001/api/tasks');\n      console.log(response.data);\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error.message);\n    }\n  };\n  const markAsCompleted = async taskId => {\n    try {\n      await axios.put(`https://localhost:5001/api/tasks/${taskId}`, {\n        isCompleted: true\n      });\n      // Update the local state to reflect the change\n      setTasks(tasks.map(task => task.id === taskId ? {\n        ...task,\n        isCompleted: true\n      } : task));\n    } catch (error) {\n      console.error('Error marking task as completed:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Tracker\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.description, \" - Due: \", task.dueDate, !task.isCompleted && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => markAsCompleted(task.id),\n          children: \"Mark as Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 47\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","fetchTasks","response","get","console","log","data","error","message","markAsCompleted","taskId","put","isCompleted","map","task","id","children","fileName","_jsxFileName","lineNumber","columnNumber","description","dueDate","onClick","_c","$RefreshReg$"],"sources":["/Users/Mansoor/task-manager-app/src/components/TaskList.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst TaskList = () => {\n    const [tasks, setTasks] = useState([]);\n\n    useEffect(() => {\n        fetchTasks();\n    }, []);\n\n    const fetchTasks = async () => {\n        try {\n\n            const response = await axios.get('https://localhost:5001/api/tasks');\n            console.log(response.data);\n            setTasks(response.data);\n        } catch (error) {\n            console.error('Error fetching tasks:', error.message);\n        }\n    };\n    const markAsCompleted = async (taskId) => {\n      try {\n          await axios.put(`https://localhost:5001/api/tasks/${taskId}`, { isCompleted: true });\n          // Update the local state to reflect the change\n          setTasks(tasks.map(task => (task.id === taskId ? { ...task, isCompleted: true } : task)));\n      } catch (error) {\n          console.error('Error marking task as completed:', error.message);\n      }\n  };\n    return (\n        <div>\n            <h1>Task Tracker</h1>\n            <h2>Task List</h2>\n            <ul>\n                {tasks.map(task => (\n                    <li key={task.id}>\n                        {task.description} - Due: {task.dueDate}\n                        {!task.isCompleted && <button onClick={() => markAsCompleted(task.id)}>Mark as Completed</button>}\n   \n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default TaskList;"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZQ,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MAEA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,kCAAkC,CAAC;MACpEC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACI,IAAI,CAAC;MAC1BN,QAAQ,CAACE,QAAQ,CAACI,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAACC,OAAO,CAAC;IACzD;EACJ,CAAC;EACD,MAAMC,eAAe,GAAG,MAAOC,MAAM,IAAK;IACxC,IAAI;MACA,MAAMhB,KAAK,CAACiB,GAAG,CAAE,oCAAmCD,MAAO,EAAC,EAAE;QAAEE,WAAW,EAAE;MAAK,CAAC,CAAC;MACpF;MACAZ,QAAQ,CAACD,KAAK,CAACc,GAAG,CAACC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,GAAG;QAAE,GAAGI,IAAI;QAAEF,WAAW,EAAE;MAAK,CAAC,GAAGE,IAAK,CAAC,CAAC;IAC7F,CAAC,CAAC,OAAOP,KAAK,EAAE;MACZH,OAAO,CAACG,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAACC,OAAO,CAAC;IACpE;EACJ,CAAC;EACC,oBACIZ,OAAA;IAAAoB,QAAA,gBACIpB,OAAA;MAAAoB,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBxB,OAAA;MAAAoB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBxB,OAAA;MAAAoB,QAAA,EACKjB,KAAK,CAACc,GAAG,CAACC,IAAI,iBACXlB,OAAA;QAAAoB,QAAA,GACKF,IAAI,CAACO,WAAW,EAAC,UAAQ,EAACP,IAAI,CAACQ,OAAO,EACtC,CAACR,IAAI,CAACF,WAAW,iBAAIhB,OAAA;UAAQ2B,OAAO,EAAEA,CAAA,KAAMd,eAAe,CAACK,IAAI,CAACC,EAAE,CAAE;UAAAC,QAAA,EAAC;QAAiB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GAF5FN,IAAI,CAACC,EAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd,CAAC;AAACtB,EAAA,CAzCID,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}