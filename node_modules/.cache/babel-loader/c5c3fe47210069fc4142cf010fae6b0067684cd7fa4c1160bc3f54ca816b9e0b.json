{"ast":null,"code":"\n// import React, { useEffect, useState } from 'react';\n\n// import { getTasks, addTask, updateTask } from '../services/taskService';\n\n// const TaskList = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [newTaskTitle, setNewTaskTitle] = useState('');\n\n//   useEffect(() => {\n//     const fetchTasks = async () => {\n//       const response = await getTasks();\n//       setTasks(response.data);\n//     };\n\n//     fetchTasks();\n//   }, []);\n\n//   const handleAddTask = async () => {\n//     const newTask = {\n//       title: newTaskTitle,\n//       dueDate: new Date().toISOString(),\n//       isCompleted: false,\n//     };\n\n//     await addTask(newTask);\n//     setNewTaskTitle('');\n//     const updatedTasks = await getTasks();\n//     setTasks(updatedTasks.data);\n//   };\n\n//   return (\n//     <div>\n//       <h1>Task List</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Enter task title\"\n//         value={newTaskTitle}\n//         onChange={(e) => setNewTaskTitle(e.target.value)}\n//       />\n//       <button onClick={handleAddTask}>Add Task</button>\n//       {tasks.map((task) => (\n//         <task key={task.id} task={task} onUpdate={() => updateTask(task.id, task)} />\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default TaskList;","map":{"version":3,"names":[],"sources":["/Users/Mansoor/task-manager-app/src/components/TaskList.js"],"sourcesContent":["\n// import React, { useEffect, useState } from 'react';\n\n// import { getTasks, addTask, updateTask } from '../services/taskService';\n\n// const TaskList = () => {\n//   const [tasks, setTasks] = useState([]);\n//   const [newTaskTitle, setNewTaskTitle] = useState('');\n\n//   useEffect(() => {\n//     const fetchTasks = async () => {\n//       const response = await getTasks();\n//       setTasks(response.data);\n//     };\n\n//     fetchTasks();\n//   }, []);\n\n//   const handleAddTask = async () => {\n//     const newTask = {\n//       title: newTaskTitle,\n//       dueDate: new Date().toISOString(),\n//       isCompleted: false,\n//     };\n\n//     await addTask(newTask);\n//     setNewTaskTitle('');\n//     const updatedTasks = await getTasks();\n//     setTasks(updatedTasks.data);\n//   };\n\n//   return (\n//     <div>\n//       <h1>Task List</h1>\n//       <input\n//         type=\"text\"\n//         placeholder=\"Enter task title\"\n//         value={newTaskTitle}\n//         onChange={(e) => setNewTaskTitle(e.target.value)}\n//       />\n//       <button onClick={handleAddTask}>Add Task</button>\n//       {tasks.map((task) => (\n//         <task key={task.id} task={task} onUpdate={() => updateTask(task.id, task)} />\n//       ))}\n//     </div>\n//   );\n// };\n\n// export default TaskList;\n"],"mappings":";AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}