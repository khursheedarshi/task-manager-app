{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'https://localhost:5001/api/tasks';\nexport const getTasks = () => axios.get(API_BASE_URL).catch(function (error) {\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    console.log(error.response.data);\n    console.log(error.response.status);\n    console.log(error.response.headers);\n  } else if (error.request) {\n    // The request was made but no response was received\n    // `error.request` is an instance of XMLHttpRequest in the browser \n    // and an instance of http.ClientRequest in node.js\n    console.log(error.request);\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.log('Error', error.message);\n  }\n});\nexport const addTask = task => axios.post(API_BASE_URL, task).catch(function (error) {\n  if (error.response) {\n    // The request was made and the server responded with a status code\n    // that falls out of the range of 2xx\n    console.log(error.response.data);\n    console.log(error.response.status);\n    console.log(error.response.headers);\n  } else if (error.request) {\n    // The request was made but no response was received\n    // `error.request` is an instance of XMLHttpRequest in the browser \n    // and an instance of http.ClientRequest in node.js\n    console.log(error.request);\n  } else {\n    // Something happened in setting up the request that triggered an Error\n    console.log('Error', error.message);\n  }\n});\nexport const updateTask = (id, task) => axios.put(`${API_BASE_URL}/${id}`, task);\n\n//axios.interceptors.response.use(undefined, error=> {\n// const {status, data, config}= error.response;\n// if (status===404)\n// {history.push('/not found');}\n// if (status===400 && config.method === 'get' && data.errors.hasOwnProperty('id'))\n// {history.push('/not found');}\n// if (status===500)\n// {toast.error('Server error-ref terminal for more info!');}\n//})","map":{"version":3,"names":["axios","API_BASE_URL","getTasks","get","catch","error","response","console","log","data","status","headers","request","message","addTask","task","post","updateTask","id","put"],"sources":["/Users/Mansoor/task-manager-app/src/services/taskService.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'https://localhost:5001/api/tasks';\n\nexport const getTasks = () => axios.get(API_BASE_URL).catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser \n      // and an instance of http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n   \n  });\nexport const addTask = (task) => axios.post(API_BASE_URL, task).catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser \n      // and an instance of http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n   \n  });\nexport const updateTask = (id, task) => axios.put(`${API_BASE_URL}/${id}`, task);\n\n//axios.interceptors.response.use(undefined, error=> {\n   // const {status, data, config}= error.response;\n   // if (status===404)\n   // {history.push('/not found');}\n   // if (status===400 && config.method === 'get' && data.errors.hasOwnProperty('id'))\n   // {history.push('/not found');}\n   // if (status===500)\n   // {toast.error('Server error-ref terminal for more info!');}\n//})\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,kCAAkC;AAEvD,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAMF,KAAK,CAACG,GAAG,CAACF,YAAY,CAAC,CAACG,KAAK,CAAC,UAAUC,KAAK,EAAE;EACzE,IAAIA,KAAK,CAACC,QAAQ,EAAE;IAClB;IACA;IACAC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACC,QAAQ,CAACG,IAAI,CAAC;IAChCF,OAAO,CAACC,GAAG,CAACH,KAAK,CAACC,QAAQ,CAACI,MAAM,CAAC;IAClCH,OAAO,CAACC,GAAG,CAACH,KAAK,CAACC,QAAQ,CAACK,OAAO,CAAC;EACrC,CAAC,MAAM,IAAIN,KAAK,CAACO,OAAO,EAAE;IACxB;IACA;IACA;IACAL,OAAO,CAACC,GAAG,CAACH,KAAK,CAACO,OAAO,CAAC;EAC5B,CAAC,MAAM;IACL;IACAL,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,KAAK,CAACQ,OAAO,CAAC;EACrC;AAEF,CAAC,CAAC;AACJ,OAAO,MAAMC,OAAO,GAAIC,IAAI,IAAKf,KAAK,CAACgB,IAAI,CAACf,YAAY,EAAEc,IAAI,CAAC,CAACX,KAAK,CAAC,UAAUC,KAAK,EAAE;EACnF,IAAIA,KAAK,CAACC,QAAQ,EAAE;IAClB;IACA;IACAC,OAAO,CAACC,GAAG,CAACH,KAAK,CAACC,QAAQ,CAACG,IAAI,CAAC;IAChCF,OAAO,CAACC,GAAG,CAACH,KAAK,CAACC,QAAQ,CAACI,MAAM,CAAC;IAClCH,OAAO,CAACC,GAAG,CAACH,KAAK,CAACC,QAAQ,CAACK,OAAO,CAAC;EACrC,CAAC,MAAM,IAAIN,KAAK,CAACO,OAAO,EAAE;IACxB;IACA;IACA;IACAL,OAAO,CAACC,GAAG,CAACH,KAAK,CAACO,OAAO,CAAC;EAC5B,CAAC,MAAM;IACL;IACAL,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEH,KAAK,CAACQ,OAAO,CAAC;EACrC;AAEF,CAAC,CAAC;AACJ,OAAO,MAAMI,UAAU,GAAGA,CAACC,EAAE,EAAEH,IAAI,KAAKf,KAAK,CAACmB,GAAG,CAAE,GAAElB,YAAa,IAAGiB,EAAG,EAAC,EAAEH,IAAI,CAAC;;AAEhF;AACG;AACA;AACA;AACA;AACA;AACA;AACA;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}